/* font5x7_display_driver.h
 *
 * Bitmapped font table and display functions for 8x8 LED matrix
 * Supports digits, letters, symbols (ASCII 32â€“126), centered in 8x8 grid
 */

#ifndef FONT5X7_DISPLAY_DRIVER_H
#define FONT5X7_DISPLAY_DRIVER_H

#include <stdint.h>

// Font parameters
#define FONT5X7_WIDTH 5
#define FONT5X7_HEIGHT 7
#define FONT5X7_FIRST_CHAR 32
#define FONT5X7_LAST_CHAR 126
#define FONT5X7_CHAR_COUNT (FONT5X7_LAST_CHAR - FONT5X7_FIRST_CHAR + 1)

// Font data: each character is 5 bytes, each byte is one vertical column (top to bottom)
const uint8_t font5x7[FONT5X7_CHAR_COUNT][FONT5X7_WIDTH] = {
  // ' ' (SPACE)
  {0x00,0x00,0x00,0x00,0x00}, // 00000000 00000000 00000000 00000000 00000000
  // '!'
  {0x00,0x00,0x5F,0x00,0x00}, // 00000000 00000000 01011111 00000000 00000000
  // '"'
  {0x00,0x07,0x00,0x07,0x00}, // 00000000 00000111 00000000 00000111 00000000
  // '#'
  {0x14,0x7F,0x14,0x7F,0x14}, // 00010100 01111111 00010100 01111111 00010100
  // '$'
  {0x24,0x2A,0x7F,0x2A,0x12}, // 00100100 00101010 01111111 00101010 00010010
  // '%'
  {0x23,0x13,0x08,0x64,0x62}, // 00100011 00010011 00001000 01100100 01100010
  // '&'
  {0x36,0x49,0x55,0x22,0x50}, // 00110110 01001001 01010101 00100010 01010000
  // '\''
  {0x00,0x05,0x03,0x00,0x00}, // 00000000 00000101 00000011 00000000 00000000
  // '('
  {0x00,0x1C,0x22,0x41,0x00}, // 00000000 00011100 00100010 01000001 00000000
  // ')'
  {0x00,0x41,0x22,0x1C,0x00}, // 00000000 01000001 00100010 00011100 00000000
  // '*'
  {0x14,0x08,0x3E,0x08,0x14}, // 00010100 00001000 00111110 00001000 00010100
  // '+'
  {0x08,0x08,0x3E,0x08,0x08}, // 00001000 00001000 00111110 00001000 00001000
  // ','
  {0x00,0x50,0x30,0x00,0x00}, // 00000000 01010000 00110000 00000000 00000000
  // '-'
  {0x08,0x08,0x08,0x08,0x08}, // 00001000 00001000 00001000 00001000 00001000
  // '.'
  {0x00,0x60,0x60,0x00,0x00}, // 00000000 01100000 01100000 00000000 00000000
  // '/'
  {0x20,0x10,0x08,0x04,0x02}, // 00100000 00010000 00001000 00000100 00000010

  // '0'
  {0x3c, 0x42, 0x42, 0x3c, 0x00}, // 00111110 01010001 01001001 01000101 00111110
  // '1'
  {0x00, 0x44, 0x7e, 0x40, 0x00}, // 00000000 01000010 01111111 01000000 00000000
  // '2'
  {0x44, 0x62, 0x52, 0x4c, 0x00}, // 01000010 01100001 01010001 01001001 01000110
  // '3'
  {0x22, 0x4a, 0x56, 0x22, 0x00}, // 00100001 01000001 01000101 01001011 00110001
  // '4'
  {0x18, 0x14, 0x7e, 0x10, 0x00}, // 00011000 00010100 00010010 01111111 00010000
  // '5'
  {0x2e, 0x4a, 0x4a, 0x32, 0x00}, // 00100111 01000101 01000101 01000101 00111001
  // '6'
  {0x38, 0x54, 0x52, 0x30, 0x00}, // 00111100 01001010 01001001 01001001 00110000
  // '7'
  {0x02, 0x72, 0x0a, 0x06, 0x00}, // 00000001 01110001 00001001 00000101 00000011
  // '8'
  {0x24, 0x5a, 0x5a, 0x24, 0x00}, // 00110110 01001001 01001001 01001001 00110110
  // '9'
  {0x04, 0x4a, 0x2a, 0x1c, 0x00}, // 00000110 01001001 01001001 00101001 00011110

  // ':' 00010100 00010100
  {0x6c, 0x00, 0x00, 0x00, 0x00}, // 00000000 00110110 00110110 00000000 00000000
  // ';'
  {0x00,0x56,0x36,0x00,0x00}, // 00000000 01010110 00110110 00000000 00000000
  // '<'
  {0x08,0x14,0x22,0x41,0x00}, // 00001000 00010100 00100010 01000001 00000000
  // '='
  {0x14,0x14,0x14,0x14,0x14}, // 00010100 00010100 00010100 00010100 00010100
  // '>'
  {0x00,0x41,0x22,0x14,0x08}, // 00000000 01000001 00100010 00010100 00001000
  // '?'
  {0x02,0x01,0x51,0x09,0x06}, // 00000010 00000001 01010001 00001001 00000110
  // '@'
  {0x7E,0x11,0x11,0x11,0x7E}, // 01111110 00010001 00010001 00010001 01111110

  // 'A'
  {0x7E,0x11,0x11,0x11,0x7E}, // 01111110 00010001 00010001 00010001 01111110
  // 'B'
  {0x7F,0x49,0x49,0x49,0x36}, // 01111111 01001001 01001001 01001001 00110110
  // 'C'
  {0x3E,0x41,0x41,0x41,0x22}, // 00111110 01000001 01000001 01000001 00100010
  // 'D'
  {0x7F,0x41,0x41,0x22,0x1C}, // 01111111 01000001 01000001 00100010 00011100
  // 'E'
  {0x7F,0x49,0x49,0x49,0x41}, // 01111111 01001001 01001001 01001001 01000001
  // 'F'
  {0x7F,0x09,0x09,0x09,0x01}, // 01111111 00001001 00001001 00001001 00000001
  // 'G'
  {0x3E,0x41,0x49,0x49,0x7A}, // 00111110 01000001 01001001 01001001 01111010
  // 'H'
  {0x7F,0x08,0x08,0x08,0x7F}, // 01111111 00001000 00001000 00001000 01111111
  // 'I'
  {0x00,0x41,0x7F,0x41,0x00}, // 00000000 01000001 01111111 01000001 00000000
  // 'J'
  {0x20,0x40,0x41,0x3F,0x01}, // 00100000 01000000 01000001 00111111 00000001
  // 'K'
  {0x7F,0x08,0x14,0x22,0x41}, // 01111111 00001000 00010100 00100010 01000001
  // 'L'
  {0x7F,0x40,0x40,0x40,0x40}, // 01111111 01000000 01000000 01000000 01000000
  // 'M'
  {0x7F,0x02,0x0C,0x02,0x7F}, // 01111111 00000010 00001100 00000010 01111111
  // 'N'
  {0x7F,0x04,0x08,0x10,0x7F}, // 01111111 00000100 00001000 00010000 01111111
  // 'O'
  {0x3E,0x41,0x41,0x41,0x3E}, // 00111110 01000001 01000001 01000001 00111110
  // 'P'
  {0x7F,0x09,0x09,0x09,0x06}, // 01111111 00001001 00001001 00001001 00000110
  // 'Q'
  {0x3E,0x41,0x51,0x21,0x5E}, // 00111110 01000001 01010001 00100001 01011110
  // 'R'
  {0x7F,0x09,0x19,0x29,0x46}, // 01111111 00001001 00011001 00101001 01000110
  // 'S'
  {0x26,0x49,0x49,0x49,0x32}, // 00100110 01001001 01001001 01001001 00110010
  // 'T'
  {0x01,0x01,0x7F,0x01,0x01}, // 00000001 00000001 01111111 00000001 00000001
  // 'U'
  {0x3F,0x40,0x40,0x40,0x3F}, // 00111111 01000000 01000000 01000000 00111111
  // 'V'
  {0x1F,0x20,0x40,0x20,0x1F}, // 00011111 00100000 01000000 00100000 00011111
  // 'W'
  {0x3F,0x40,0x38,0x40,0x3F}, // 00111111 01000000 00111000 01000000 00111111
  // 'X'
  {0x63,0x14,0x08,0x14,0x63}, // 01100011 00010100 00001000 00010100 01100011
  // 'Y'
  {0x07,0x08,0x70,0x08,0x07}, // 00000111 00001000 01110000 00001000 00000111
  // 'Z'
  {0x61,0x51,0x49,0x45,0x43}, // 01100001 01010001 01001001 01000101 01000011
};



// Function prototypes
void drawChar(uint8_t x, uint8_t y, char c, uint8_t color);
void drawString(uint8_t x, uint8_t y, const char *str, uint8_t color);
void scrollText(const char *str, uint8_t speed, uint8_t color);
void setPixel(uint8_t x, uint8_t y, uint8_t r, uint8_t g);

#endif
